{"version":3,"sources":["assets/blobtopleft.svg","assets/blobtopleftshadow.svg","assets/blobtopright.svg","assets/blobtoprightshadow.svg","assets/cross.svg","assets/circle.svg","pages/Home/index.js","assets/crossBoard.svg","assets/circleBoard.svg","contexts/GameContext.js","components/Cell/index.js","utils/minimax.js","utils/boardLogic.js","components/Board/index.js","components/ScoreBoard/index.js","assets/blobbottomleft.svg","assets/blobbottomleftshadow.svg","assets/blobbottomright.svg","assets/blobbottomrightshadow.svg","assets/backicon.svg","assets/reloadicon.svg","components/GameLayout/index.js","utils/turn.js","providers/GameProvider.js","pages/Game/index.js","components/App/index.js","index.js"],"names":["HomePage","className","src","blobtopleft","alt","blobtopleftshadow","blobtopright","blobtoprightshadow","cross","circle","to","GameContext","createContext","turn","changeTurn","displayName","Cell","type","selectCell","moveIA","useContext","onClick","minimax","board","depth","player","best_node","someoneWin","get_score","emptyCells","cell","pos_x","pos_y","current_node","winPlayer","winner_line","list_state_winner","i","length","winner_pos","j","push","winnerState","line_filled","empty_cells_pos","BoardLogic","size","this","matrix","create_matrix","rows","console","log","Board","useState","setMatrix","useEffect","newBoard","newMatrix","bestMove","alert","map","posX","posY","ScoreBoard","GameLayout","Math","floor","random","style","backgroundImage","backicon","window","location","reload","reloadicon","blobbottomleft","blobbottomleftshadow","blobbottomright","blobbottomrightshadow","GameProvider","children","setTurn","Provider","value","GamePage","App","exact","path","component","container","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.48a089e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blobtopleft.6f761a9a.svg\";","export default __webpack_public_path__ + \"static/media/blobtopleftshadow.413a3748.svg\";","export default __webpack_public_path__ + \"static/media/blobtopright.88e31e43.svg\";","export default __webpack_public_path__ + \"static/media/blobtoprightshadow.2444e355.svg\";","export default __webpack_public_path__ + \"static/media/cross.901f4291.svg\";","export default __webpack_public_path__ + \"static/media/circle.bf7ea98d.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport blobtopleft from \"../../assets/blobtopleft.svg\";\nimport blobtopleftshadow from \"../../assets/blobtopleftshadow.svg\";\nimport blobtopright from \"../../assets/blobtopright.svg\";\nimport blobtoprightshadow from \"../../assets/blobtoprightshadow.svg\";\nimport cross from \"../../assets/cross.svg\";\nimport circle from \"../../assets/circle.svg\";\nimport './style.scss';\n\nconst HomePage = () => {\n  return (\n    <div className=\"homepage\">\n      <div className=\"blobs\">\n        <img className=\"blob-top-left\" src={blobtopleft} alt=\"blob-top-left\"/>\n        <img className=\"blob-top-left-shadow\" src={blobtopleftshadow} alt=\"blob-top-left-shadow\"/>\n        <img className=\"blob-top-right\" src={blobtopright} alt=\"blob-top-right\"/>\n        <img className=\"blob-top-right-shadow\" src={blobtoprightshadow} alt=\"blob-top-right-shadow\"/>\n      </div>\n      <div className=\"cross\">\n        <img className=\"cross-center\" src={cross} alt=\"cross-center\"/>\n        <img className=\"cross-left\" src={cross} alt=\"cross-left\"/>\n        <img className=\"cross-right\" src={cross} alt=\"cross-right\"/>\n      </div>\n      <div className=\"circles\">\n        <img className=\"circle-left\" src={circle} alt=\"circle-left\"/>\n        <img className=\"circle-right\" src={circle} alt=\"circle-right\"/>\n      </div>\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>Tic Tac Toe</h1>\n        </div>\n        <div className=\"btn-container\">\n          <div className=\"btn-play\">\n            <Link to=\"/game\">\n              <span>Play</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <div className=\"degraded-rectangle-bottom\">\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/crossBoard.ecca2184.svg\";","export default __webpack_public_path__ + \"static/media/circleBoard.bf8de4ce.svg\";","import { createContext } from \"react\";\n\nconst GameContext = createContext({\n  turn: 1,\n  changeTurn: () => {}\n});\n\nGameContext.displayName = \"GameContext\";\n\nexport default GameContext;","import React, { Fragment, useContext } from 'react';\nimport \"./style.scss\";\nimport cross from \"../../assets/crossBoard.svg\";\nimport circle from \"../../assets/circleBoard.svg\";\nimport GameContext from \"../../contexts/GameContext\"\n\nconst Cell = ({type, selectCell, moveIA}) => {\n  const {\n    turn,\n    changeTurn\n  } = useContext(GameContext);\n  \n  return (\n    <Fragment>\n      { type === 0 && <button className=\"cell-empty\" onClick={selectCell}></button> }\n      { type === 1 && <div className=\"cell-cross\">\n        <img className=\"cross\" src={cross} alt=\"cross\"/>\n      </div> }\n      { type === -1 && <div className=\"cell-circle\">\n        <img className=\"circle\" src={circle} alt=\"circle\"/>\n      </div> }\n    </Fragment>\n  )\n}\n\nexport default Cell;\n","export const minimax = (board, depth, player) => {\n  let best_node;\n\n  if (player === 1) {\n    best_node = [-1,-1, -1000];\n  } else {\n    best_node = [-1,-1, 1000];\n  }\n\n  if (depth === 0 || someoneWin(board)) {\n    let score = get_score(board);\n    return [-1,-1,score];\n  }\n  \n  for (let cell of emptyCells(board)) {\n    let pos_x = cell[0];\n    let pos_y = cell[1];\n    board[pos_x][pos_y] = player;\n\n    let current_node = minimax(board, depth - 1, -player);\n\n    board[pos_x][pos_y] = 0;\n    current_node[0] = pos_x;\n    current_node[1] = pos_y;\n    \n\n    if (player === 1) {\n      if (current_node[2] > best_node[2]) {\n        best_node = current_node;\n      }\n    } else {\n      if (current_node[2] < best_node[2]) {\n        best_node = current_node;\n      }\n    }\n  }\n\n  return best_node;\n}\n\nconst winnerState = (board) => {\n  let list_state_winner = [];\n  // horizontal lines \n  for (let i = 0; i < board.length; i++) {\n    let winner_pos = [];\n    for (let j = 0; j < board.length; j++) {\n      winner_pos.push(board[i][j]);\n    }\n    list_state_winner.push(winner_pos);\n  }\n\n  // vertical lines\n  for (let i = 0; i < board.length; i++) {\n    let winner_pos = [];\n    for (let j = 0; j < board.length; j++) {\n      winner_pos.push(board[j][i]);\n    }\n    list_state_winner.push(winner_pos);\n  }\n\n  // principal diagonal \n  let winner_pos = [];\n  for (let i = 0; i < board.length; i++) {\n    winner_pos.push(board[i][i]);\n  }\n  list_state_winner.push(winner_pos);\n\n  // secondary diagonal \n  winner_pos = [];\n  for (let i = 0; i < board.length; i++) {\n    winner_pos.push(board[i][(board.length - 1) - i]); \n  }\n  list_state_winner.push(winner_pos);\n  return list_state_winner;\n}\n\nconst someoneWin = (board) => {\n  const HUMAN = +1;\n  const IA = -1;\n  return winPlayer(board, HUMAN) || winPlayer(board, IA); \n}\n\nconst winPlayer = (board, player) => {\n  let winner_line = winnerState(board);\n  for (let i = 0; i < winner_line.length; i++) {\n    let line_filled = 0;\n    for (let j = 0; j < board.length; j++) {\n      if (winner_line[i][j] === player) {\n        line_filled++;\n      }\n    }\n    if (line_filled === board.length) {\n      return true;\n    }\n  }\n  return false;\n}\n\nconst get_score = (board) => {\n  let score = 0;\n  const HUMAN = +1;\n  const IA = -1;\n\n  if (winPlayer(board, HUMAN)) {\n    score = +1;\n  } else if (winPlayer(board, IA)) {\n    score = -1;\n  } else {\n    score = 0;\n  }\n\n  return score;\n}\n\nexport const emptyCells = (board) => {\n  let empty_cells_pos = [];\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board.length; j++) {\n      if (board[i][j] === 0) {\n        empty_cells_pos.push([i,j]);\n      }\n    }\n  }\n  return empty_cells_pos;\n}","export default class BoardLogic {\n  constructor(size) {\n    this.size = size;\n    this.matrix = this.create_matrix(size);\n  }\n\n  create_matrix(size) {\n    let matrix = [];\n    for (let i = 0; i < size; i++) {\n      let rows = [];\n      for (let j = 0; j < size; j++) {\n        rows.push(0);\n      }\n      matrix.push(rows);\n    }\n    return matrix;\n  }\n\n  print(matrix) {\n    for (let i = 0; i < matrix.length; i++) {\n        console.log(matrix[i]);\n    }\n  }\n}","import React, {useState, useEffect, useContext} from 'react';\nimport \"./style.scss\";\nimport Cell from \"../Cell\";\nimport {minimax, emptyCells} from \"../../utils/minimax\";\nimport BoardLogic from \"../../utils/boardLogic\"\nimport GameContext from \"../../contexts/GameContext\";\n\nconst Board = () => {\n  const [matrix, setMatrix] = useState([]);\n  const {\n    turn,\n    changeTurn\n  } = useContext(GameContext);\n\n  useEffect(() => {\n    let newBoard = new BoardLogic(3);\n    setMatrix(newBoard.matrix);\n  }, []);\n\n  useEffect(() => {\n    if (turn === -1) {\n      moveIA();\n    }\n  }, [turn]);\n\n  const selectCell = (posX, posY) => {\n    console.log(\"Select Cell\");\n    const newMatrix = [...matrix];\n    newMatrix[posX][posY] = turn;\n    setMatrix(newMatrix);\n    changeTurn(-turn);\n  }\n\n  const moveIA = () => {\n    const newMatrix = [...matrix];\n    let bestMove = minimax(matrix,emptyCells(matrix).length,turn);\n    console.log(bestMove);\n    if (bestMove[0] === -1 && bestMove[1] === -1) {\n      if(bestMove[2] === 0) {\n        alert(\"None Wins\");\n      } else if(bestMove[2] === -1) {\n        alert(\"Win IA\");\n      } else {\n        alert(\"You are the Winner!\");\n      }\n    } else {\n      newMatrix[bestMove[0]][bestMove[1]] = turn;\n      setMatrix(newMatrix);\n    }\n    changeTurn(-turn);\n  }\n\n  return (\n    <div className=\"board\">\n      <div className=\"board-container\">\n        <div className=\"board-space\">\n        { matrix.map((rows, posX) =>\n          <div key={posX} className=\"rows\">\n            { rows.map((cell, posY) => \n              <Cell key={posY} \n                    type={cell}\n                    selectCell={() => selectCell(posX,posY)}/>\n            )}\n          </div>\n        )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Board;\n","import React from 'react';\nimport \"./style.scss\";\n\nconst ScoreBoard = () => {\n  return (\n    <div className=\"scoreboard\">\n      <div className=\"scoreboard-container\">\n        <div className=\"player1\">\n          <span>P1</span>\n        </div>\n        <div className=\"versus\">\n          <span>VS</span>\n        </div>\n        <div className=\"player2\">\n          <span>IA</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ScoreBoard;\n","export default __webpack_public_path__ + \"static/media/blobbottomleft.99908a78.svg\";","export default __webpack_public_path__ + \"static/media/blobbottomleftshadow.bbcd3c4b.svg\";","export default __webpack_public_path__ + \"static/media/blobbottomright.16d6e69d.svg\";","export default __webpack_public_path__ + \"static/media/blobbottomrightshadow.57929ffb.svg\";","export default __webpack_public_path__ + \"static/media/backicon.28203c5f.svg\";","export default __webpack_public_path__ + \"static/media/reloadicon.d60843c3.svg\";","import React, {useEffect, useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./style.scss\"\nimport Board from \"../Board\";\nimport ScoreBoard from \"../ScoreBoard\";\nimport blobbottomleft from \"../../assets/blobbottomleft.svg\";\nimport blobbottomleftshadow from \"../../assets/blobbottomleftshadow.svg\";\nimport blobbottomright from \"../../assets/blobbottomright.svg\";\nimport blobbottomrightshadow from \"../../assets/blobbottomrightshadow.svg\";\nimport backicon from \"../../assets/backicon.svg\";\nimport reloadicon from \"../../assets/reloadicon.svg\";\nimport {randomTurnSelection} from \"../../utils/turn\";\nimport GameContext from \"../../contexts/GameContext\";\n\nconst GameLayout = () => {\n  const {\n    turn,\n    changeTurn\n  } = useContext(GameContext);\n\n  useEffect(() => {\n    changeTurn(randomTurnSelection());\n  },[]);\n\n  const colorTurn = () => {\n    let blue = \"#206357\";\n    let red = \"#792929\";\n    return turn === 1 ? blue : red;\n  }\n\n  return (\n    <div className=\"gamelayout\">\n      <div className=\"degraded-rectangle-top\" style={{ backgroundImage: 'linear-gradient(' + colorTurn() + ', rgb(27, 27, 27))' }}>\n      </div>\n      <ScoreBoard></ScoreBoard>\n      <Board></Board>\n      <div className=\"actions\">\n        <Link className=\"back-btn\" to=\"/\">\n          <img className=\"back-icon\" src={backicon} alt=\"backicon\"/>\n        </Link>\n        <Link className=\"restart-btn\" to=\"/game\" onClick={() => window.location.reload()}>\n          <img className=\"restart-icon\" src={reloadicon} alt=\"reloadicon\"/>\n        </Link>\n      </div>\n      <div className=\"blobs\">\n        <img className=\"blob-bottom-left\" src={blobbottomleft} alt=\"blob-bottom-left\"/>\n        <img className=\"blob-bottom-left-shadow\" src={blobbottomleftshadow} alt=\"blob-bottom-left-shadow\"/>\n        <img className=\"blob-bottom-right\" src={blobbottomright} alt=\"blob-bottom-right\"/>\n        <img className=\"blob-bottom-right-shadow\" src={blobbottomrightshadow} alt=\"blob-bottom-right-shadow\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default GameLayout;","export const randomTurnSelection = () => {\n  let option = [1,-1];\n  return option[Math.floor(Math.random() * 2)];\n}","import React, { useState } from \"react\";\nimport GameContext from \"../contexts/GameContext\"\n\nconst GameProvider = ({ children }) => {\n  const [turn, setTurn] = useState(1);\n\n  const changeTurn = (turn) => {\n    setTurn(turn);\n  }\n\n  return (\n    <GameContext.Provider\n      value={{\n        turn,\n        changeTurn,      \n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n}\n\nexport default GameProvider;","import React from 'react';\nimport GameLayout from \"../../components/GameLayout\"\nimport GameProvider from \"../../providers/GameProvider\";\n\nconst GamePage = () => {\n  return (\n      <GameProvider>\n        <GameLayout />\n      </GameProvider>\n  )\n}\n\nexport default GamePage;\n\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from '../../pages/Home';\nimport GamePage from '../../pages/Game';\nimport './style.scss'\n\nconst App = () => (\n  <HashRouter>\n        <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/game\" component={GamePage} />\n        </Switch>\n    </HashRouter>\n)\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst container = document.getElementById('root');\n\nReactDOM.render(<App />, container)\n\n"],"sourceRoot":""}